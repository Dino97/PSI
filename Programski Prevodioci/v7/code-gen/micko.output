Grammar

    0 $accept: program $end

    1 program: gvariable_list function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body

    6 type: _TYPE

    7 parameter: %empty
    8          | type _ID

    9 $@2: %empty

   10 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 gvariable_list: %empty
   14               | gvariable_list gvariable

   15 variable: type _ID _SEMICOLON

   16 gvariable: type _ID _SEMICOLON

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement
   23          | increment_statement

   24 increment_statement: increment _SEMICOLON

   25 increment: _ID _INCR

   26 compound_statement: _LBRACKET statement_list _RBRACKET

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   28 num_exp: exp
   29        | num_exp _AROP exp

   30 exp: literal
   31    | _ID
   32    | function_call
   33    | _LPAREN num_exp _RPAREN
   34    | increment

   35 literal: _INT_NUMBER
   36        | _UINT_NUMBER

   37 $@3: %empty

   38 function_call: _ID $@3 _LPAREN argument _RPAREN

   39 argument: %empty
   40         | num_exp

   41 if_statement: if_part
   42             | if_part _ELSE statement

   43 @4: %empty

   44 $@5: %empty

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   46 rel_exp: num_exp _RELOP num_exp

   47 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6
_IF (259) 45
_ELSE (260) 42
_RETURN (261) 47
_ID (262) 5 8 15 16 25 27 31 38
_INT_NUMBER (263) 35
_UINT_NUMBER (264) 36
_LPAREN (265) 5 33 38 45
_RPAREN (266) 5 33 38 45
_LBRACKET (267) 10 26
_RBRACKET (268) 10 26
_ASSIGN (269) 27
_SEMICOLON (270) 15 16 24 27 47
_AROP (271) 29
_RELOP (272) 46
_INCR (273) 25
ONLY_IF (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
program (21)
    on left: 1, on right: 0
function_list (22)
    on left: 2 3, on right: 1 3
function (23)
    on left: 5, on right: 2 3
$@1 (24)
    on left: 4, on right: 5
type (25)
    on left: 6, on right: 5 8 15 16
parameter (26)
    on left: 7 8, on right: 5
body (27)
    on left: 10, on right: 5
$@2 (28)
    on left: 9, on right: 10
variable_list (29)
    on left: 11 12, on right: 10 12
gvariable_list (30)
    on left: 13 14, on right: 1 14
variable (31)
    on left: 15, on right: 12
gvariable (32)
    on left: 16, on right: 14
statement_list (33)
    on left: 17 18, on right: 10 18 26
statement (34)
    on left: 19 20 21 22 23, on right: 18 42 45
increment_statement (35)
    on left: 24, on right: 23
increment (36)
    on left: 25, on right: 24 34
compound_statement (37)
    on left: 26, on right: 19
assignment_statement (38)
    on left: 27, on right: 20
num_exp (39)
    on left: 28 29, on right: 27 29 33 40 46 47
exp (40)
    on left: 30 31 32 33 34, on right: 28 29
literal (41)
    on left: 35 36, on right: 30
function_call (42)
    on left: 38, on right: 32
$@3 (43)
    on left: 37, on right: 38
argument (44)
    on left: 39 40, on right: 38
if_statement (45)
    on left: 41 42, on right: 21
if_part (46)
    on left: 45, on right: 41 42
@4 (47)
    on left: 43, on right: 45
$@5 (48)
    on left: 44, on right: 45
rel_exp (49)
    on left: 46, on right: 45
return_statement (50)
    on left: 47, on right: 22


State 0

    0 $accept: . program $end

    $default  reduce using rule 13 (gvariable_list)

    program         go to state 1
    gvariable_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: gvariable_list . function_list
   14 gvariable_list: gvariable_list . gvariable

    _TYPE  shift, and go to state 4

    function_list  go to state 5
    function       go to state 6
    type           go to state 7
    gvariable      go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

    6 type: _TYPE .

    $default  reduce using rule 6 (type)


State 5

    1 program: gvariable_list function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 4

    $default  reduce using rule 1 (program)

    function  go to state 9
    type      go to state 10


State 6

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 7

    5 function: type . _ID $@1 _LPAREN parameter _RPAREN body
   16 gvariable: type . _ID _SEMICOLON

    _ID  shift, and go to state 11


State 8

   14 gvariable_list: gvariable_list gvariable .

    $default  reduce using rule 14 (gvariable_list)


State 9

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 10

    5 function: type . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 12


State 11

    5 function: type _ID . $@1 _LPAREN parameter _RPAREN body
   16 gvariable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 13

    $default  reduce using rule 4 ($@1)

    $@1  go to state 14


State 12

    5 function: type _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 14


State 13

   16 gvariable: type _ID _SEMICOLON .

    $default  reduce using rule 16 (gvariable)


State 14

    5 function: type _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 15


State 15

    5 function: type _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 4

    $default  reduce using rule 7 (parameter)

    type       go to state 16
    parameter  go to state 17


State 16

    8 parameter: type . _ID

    _ID  shift, and go to state 18


State 17

    5 function: type _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 19


State 18

    8 parameter: type _ID .

    $default  reduce using rule 8 (parameter)


State 19

    5 function: type _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 20

    body  go to state 21


State 20

   10 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 22


State 21

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 22

   10 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 4

    $default  reduce using rule 9 ($@2)

    type      go to state 23
    $@2       go to state 24
    variable  go to state 25


State 23

   15 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 26


State 24

   10 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 27


State 25

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 26

   15 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 28


State 27

   10 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32
    _RBRACKET  shift, and go to state 33

    statement             go to state 34
    increment_statement   go to state 35
    increment             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41


State 28

   15 variable: type _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 29

   45 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 42


State 30

   47 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    num_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 31

   25 increment: _ID . _INCR
   27 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 52
    _INCR    shift, and go to state 53


State 32

   26 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 54


State 33

   10 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 34

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 35

   23 statement: increment_statement .

    $default  reduce using rule 23 (statement)


State 36

   24 increment_statement: increment . _SEMICOLON

    _SEMICOLON  shift, and go to state 55


State 37

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 38

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 39

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 40

   41 if_statement: if_part .
   42             | if_part . _ELSE statement

    _ELSE  shift, and go to state 56

    $default  reduce using rule 41 (if_statement)


State 41

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 42

   45 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 43 (@4)

    @4  go to state 57


State 43

   25 increment: _ID . _INCR
   31 exp: _ID .
   38 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INCR  shift, and go to state 53

    _LPAREN   reduce using rule 37 ($@3)
    $default  reduce using rule 31 (exp)

    $@3  go to state 58


State 44

   35 literal: _INT_NUMBER .

    $default  reduce using rule 35 (literal)


State 45

   36 literal: _UINT_NUMBER .

    $default  reduce using rule 36 (literal)


State 46

   33 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    num_exp        go to state 59
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 47

   34 exp: increment .

    $default  reduce using rule 34 (exp)


State 48

   29 num_exp: num_exp . _AROP exp
   47 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 60
    _AROP       shift, and go to state 61


State 49

   28 num_exp: exp .

    $default  reduce using rule 28 (num_exp)


State 50

   30 exp: literal .

    $default  reduce using rule 30 (exp)


State 51

   32 exp: function_call .

    $default  reduce using rule 32 (exp)


State 52

   27 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 53

   25 increment: _ID _INCR .

    $default  reduce using rule 25 (increment)


State 54

   18 statement_list: statement_list . statement
   26 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32
    _RBRACKET  shift, and go to state 63

    statement             go to state 34
    increment_statement   go to state 35
    increment             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41


State 55

   24 increment_statement: increment _SEMICOLON .

    $default  reduce using rule 24 (increment_statement)


State 56

   42 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32

    statement             go to state 64
    increment_statement   go to state 35
    increment             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41


State 57

   45 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    num_exp        go to state 65
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 66


State 58

   38 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 67


State 59

   29 num_exp: num_exp . _AROP exp
   33 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 68
    _AROP    shift, and go to state 61


State 60

   47 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 47 (return_statement)


State 61

   29 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    exp            go to state 69
    literal        go to state 50
    function_call  go to state 51


State 62

   27 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   29 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 70
    _AROP       shift, and go to state 61


State 63

   26 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 26 (compound_statement)


State 64

   42 if_statement: if_part _ELSE statement .

    $default  reduce using rule 42 (if_statement)


State 65

   29 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 61
    _RELOP  shift, and go to state 71


State 66

   45 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 44 ($@5)

    $@5  go to state 72


State 67

   38 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    $default  reduce using rule 39 (argument)

    increment      go to state 47
    num_exp        go to state 73
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 74


State 68

   33 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 33 (exp)


State 69

   29 num_exp: num_exp _AROP exp .

    $default  reduce using rule 29 (num_exp)


State 70

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 27 (assignment_statement)


State 71

   46 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    increment      go to state 47
    num_exp        go to state 75
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 72

   45 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 76


State 73

   29 num_exp: num_exp . _AROP exp
   40 argument: num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 40 (argument)


State 74

   38 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 77


State 75

   29 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 46 (rel_exp)


State 76

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32

    statement             go to state 78
    increment_statement   go to state 35
    increment             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41


State 77

   38 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 38 (function_call)


State 78

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 45 (if_part)
