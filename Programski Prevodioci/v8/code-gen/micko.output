Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body

    6 type: _TYPE

    7 parameter: %empty
    8          | type _ID

    9 $@2: %empty

   10 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: type _ID _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | return_statement

   20 compound_statement: _LBRACKET statement_list _RBRACKET

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   22 num_exp: exp
   23        | md_exp
   24        | num_exp _AROP exp
   25        | num_exp _AROP md_exp

   26 md_exp: exp _A exp

   27 ternary: _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp

   28 ternary_exp: _ID
   29            | literal

   30 exp: literal
   31    | _ID
   32    | function_call
   33    | _LPAREN num_exp _RPAREN
   34    | ternary

   35 literal: _INT_NUMBER
   36        | _UINT_NUMBER

   37 $@3: %empty

   38 function_call: _ID $@3 _LPAREN argument _RPAREN

   39 argument: %empty
   40         | num_exp

   41 if_statement: if_part
   42             | if_part _ELSE statement

   43 @4: %empty

   44 $@5: %empty

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   46 rel_exp: num_exp _RELOP num_exp

   47 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6
_IF (259) 45
_ELSE (260) 42
_RETURN (261) 47
_ID (262) 5 8 13 21 28 31 38
_INT_NUMBER (263) 35
_UINT_NUMBER (264) 36
_LPAREN (265) 5 27 33 38 45
_RPAREN (266) 5 27 33 38 45
_LBRACKET (267) 10 20
_RBRACKET (268) 10 20
_ASSIGN (269) 21
_SEMICOLON (270) 13 21 47
_AROP (271) 24 25
_RELOP (272) 46
_QMARK (273) 27
_COLON (274) 27
_A (275) 26
ONLY_IF (276)


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
function_list (24)
    on left: 2 3, on right: 1 3
function (25)
    on left: 5, on right: 2 3
$@1 (26)
    on left: 4, on right: 5
type (27)
    on left: 6, on right: 5 8 13
parameter (28)
    on left: 7 8, on right: 5
body (29)
    on left: 10, on right: 5
$@2 (30)
    on left: 9, on right: 10
variable_list (31)
    on left: 11 12, on right: 10 12
variable (32)
    on left: 13, on right: 12
statement_list (33)
    on left: 14 15, on right: 10 15 20
statement (34)
    on left: 16 17 18 19, on right: 15 42 45
compound_statement (35)
    on left: 20, on right: 16
assignment_statement (36)
    on left: 21, on right: 17
num_exp (37)
    on left: 22 23 24 25, on right: 21 24 25 33 40 46 47
md_exp (38)
    on left: 26, on right: 23 25
ternary (39)
    on left: 27, on right: 34
ternary_exp (40)
    on left: 28 29, on right: 27
exp (41)
    on left: 30 31 32 33 34, on right: 22 24 26
literal (42)
    on left: 35 36, on right: 29 30
function_call (43)
    on left: 38, on right: 32
$@3 (44)
    on left: 37, on right: 38
argument (45)
    on left: 39 40, on right: 38
if_statement (46)
    on left: 41 42, on right: 18
if_part (47)
    on left: 45, on right: 41 42
@4 (48)
    on left: 43, on right: 45
$@5 (49)
    on left: 44, on right: 45
rel_exp (50)
    on left: 46, on right: 27 45
return_statement (51)
    on left: 47, on right: 19


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    6 type: _TYPE .

    $default  reduce using rule 6 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: type . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: type _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    5 function: type _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 10


State 10

    5 function: type _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 7 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    8 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    5 function: type _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 14


State 13

    8 parameter: type _ID .

    $default  reduce using rule 8 (parameter)


State 14

    5 function: type _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 15

   10 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 17


State 16

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 17

   10 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 9 ($@2)

    type      go to state 18
    $@2       go to state 19
    variable  go to state 20


State 18

   13 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 21


State 19

   10 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 22


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   13 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 23


State 22

   10 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   15 statement_list: statement_list . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28

    statement             go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 23

   13 variable: type _ID _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 24

   45 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 35


State 25

   47 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 40
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 26

   21 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 27

   20 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 47


State 28

   10 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 29

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 30

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 31

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 32

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 33

   41 if_statement: if_part .
   42             | if_part . _ELSE statement

    _ELSE  shift, and go to state 48

    $default  reduce using rule 41 (if_statement)


State 34

   19 statement: return_statement .

    $default  reduce using rule 19 (statement)


State 35

   45 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 43 (@4)

    @4  go to state 49


State 36

   31 exp: _ID .
   38 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 37 ($@3)
    $default  reduce using rule 31 (exp)

    $@3  go to state 50


State 37

   35 literal: _INT_NUMBER .

    $default  reduce using rule 35 (literal)


State 38

   36 literal: _UINT_NUMBER .

    $default  reduce using rule 36 (literal)


State 39

   27 ternary: _LPAREN . rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp
   33 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 51
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 52


State 40

   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp
   47 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 53
    _AROP       shift, and go to state 54


State 41

   23 num_exp: md_exp .

    $default  reduce using rule 23 (num_exp)


State 42

   34 exp: ternary .

    $default  reduce using rule 34 (exp)


State 43

   22 num_exp: exp .
   26 md_exp: exp . _A exp

    _A  shift, and go to state 55

    $default  reduce using rule 22 (num_exp)


State 44

   30 exp: literal .

    $default  reduce using rule 30 (exp)


State 45

   32 exp: function_call .

    $default  reduce using rule 32 (exp)


State 46

   21 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 56
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   15 statement_list: statement_list . statement
   20 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 57

    statement             go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 48

   42 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27

    statement             go to state 58
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 49

   45 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 59
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 60


State 50

   38 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 61


State 51

   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp
   33 exp: _LPAREN num_exp . _RPAREN
   46 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 62
    _AROP    shift, and go to state 54
    _RELOP   shift, and go to state 63


State 52

   27 ternary: _LPAREN rel_exp . _RPAREN _QMARK ternary_exp _COLON ternary_exp

    _RPAREN  shift, and go to state 64


State 53

   47 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 47 (return_statement)


State 54

   24 num_exp: num_exp _AROP . exp
   25        | num_exp _AROP . md_exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    md_exp         go to state 65
    ternary        go to state 42
    exp            go to state 66
    literal        go to state 44
    function_call  go to state 45


State 55

   26 md_exp: exp _A . exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    ternary        go to state 42
    exp            go to state 67
    literal        go to state 44
    function_call  go to state 45


State 56

   21 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp

    _SEMICOLON  shift, and go to state 68
    _AROP       shift, and go to state 54


State 57

   20 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 20 (compound_statement)


State 58

   42 if_statement: if_part _ELSE statement .

    $default  reduce using rule 42 (if_statement)


State 59

   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp
   46 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 54
    _RELOP  shift, and go to state 63


State 60

   45 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 44 ($@5)

    $@5  go to state 69


State 61

   38 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    $default  reduce using rule 39 (argument)

    num_exp        go to state 70
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 71


State 62

   33 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 33 (exp)


State 63

   46 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 72
    md_exp         go to state 41
    ternary        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 64

   27 ternary: _LPAREN rel_exp _RPAREN . _QMARK ternary_exp _COLON ternary_exp

    _QMARK  shift, and go to state 73


State 65

   25 num_exp: num_exp _AROP md_exp .

    $default  reduce using rule 25 (num_exp)


State 66

   24 num_exp: num_exp _AROP exp .
   26 md_exp: exp . _A exp

    _A  shift, and go to state 55

    $default  reduce using rule 24 (num_exp)


State 67

   26 md_exp: exp _A exp .

    $default  reduce using rule 26 (md_exp)


State 68

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 21 (assignment_statement)


State 69

   45 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 74


State 70

   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp
   40 argument: num_exp .

    _AROP  shift, and go to state 54

    $default  reduce using rule 40 (argument)


State 71

   38 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 75


State 72

   24 num_exp: num_exp . _AROP exp
   25        | num_exp . _AROP md_exp
   46 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 54

    $default  reduce using rule 46 (rel_exp)


State 73

   27 ternary: _LPAREN rel_exp _RPAREN _QMARK . ternary_exp _COLON ternary_exp

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38

    ternary_exp  go to state 77
    literal      go to state 78


State 74

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27

    statement             go to state 79
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34


State 75

   38 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 38 (function_call)


State 76

   28 ternary_exp: _ID .

    $default  reduce using rule 28 (ternary_exp)


State 77

   27 ternary: _LPAREN rel_exp _RPAREN _QMARK ternary_exp . _COLON ternary_exp

    _COLON  shift, and go to state 80


State 78

   29 ternary_exp: literal .

    $default  reduce using rule 29 (ternary_exp)


State 79

   45 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 45 (if_part)


State 80

   27 ternary: _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON . ternary_exp

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38

    ternary_exp  go to state 81
    literal      go to state 78


State 81

   27 ternary: _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp .

    $default  reduce using rule 27 (ternary)
